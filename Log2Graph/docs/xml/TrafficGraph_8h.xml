<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="TrafficGraph_8h" kind="file" language="C++">
    <compoundname>TrafficGraph.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">chrono</includes>
    <includes refid="GraphEdge_8h" local="yes">GraphEdge.h</includes>
    <includes refid="GraphNode_8h" local="yes">GraphNode.h</includes>
    <includedby refid="TrafficGraph_8cpp" local="yes">TrafficGraph.cpp</includedby>
    <includedby refid="GraphBuilder_8h" local="yes">includes/GraphBuilder.h</includedby>
    <incdepgraph>
      <node id="9">
        <label>FeatureEncoder.h</label>
        <link refid="FeatureEncoder_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>GraphEdge.h</label>
        <link refid="GraphEdge_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>GraphNode.h</label>
        <link refid="GraphNode_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>includes/TrafficGraph.h</label>
        <link refid="TrafficGraph_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>atomic</label>
      </node>
      <node id="4">
        <label>chrono</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>iomanip</label>
      </node>
      <node id="15">
        <label>map</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="3">
        <label>mutex</label>
      </node>
      <node id="16">
        <label>queue</label>
      </node>
      <node id="17">
        <label>set</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="6">
        <label>unordered_map</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>GraphBuilder.cpp</label>
        <link refid="GraphBuilder_8cpp"/>
      </node>
      <node id="7">
        <label>GraphExporter.cpp</label>
        <link refid="GraphExporter_8cpp"/>
      </node>
      <node id="2">
        <label>TrafficGraph.cpp</label>
        <link refid="TrafficGraph_8cpp"/>
      </node>
      <node id="5">
        <label>ZeekLogParser.cpp</label>
        <link refid="ZeekLogParser_8cpp"/>
      </node>
      <node id="3">
        <label>includes/GraphBuilder.h</label>
        <link refid="GraphBuilder_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>includes/GraphExporter.h</label>
        <link refid="GraphExporter_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>includes/RealTimeAnomalyDetector.h</label>
        <link refid="RealTimeAnomalyDetector_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>includes/TrafficGraph.h</label>
        <link refid="TrafficGraph_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classTrafficGraph" prot="public">TrafficGraph</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>...<sp/>other<sp/>includes<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="GraphEdge_8h" kindref="compound">GraphEdge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="GraphNode_8h" kindref="compound">GraphNode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRAFFICGRAPH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRAFFICGRAPH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classTrafficGraph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTrafficGraph_1aa52225cd200774fe315bfcf344635fc9" kindref="member">TrafficGraph</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTrafficGraph_1aa52225cd200774fe315bfcf344635fc9" kindref="member">TrafficGraph</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTrafficGraph_1a0bbbfe4c14d9611db5060a1af21e3948" kindref="member">~TrafficGraph</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;GraphNode&gt;<sp/><ref refid="classTrafficGraph_1aaa78dc30cf3211a8b1ff008e6e821fda" kindref="member">get_or_create_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;type);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTrafficGraph_1a6103742580d1f6b65cad221f93dd5ac0" kindref="member">add_node</ref>(std::shared_ptr&lt;GraphNode&gt;<sp/>node);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTrafficGraph_1a10ccbf8d4890bf2a6f2673aa74a85641" kindref="member">add_edge</ref>(std::shared_ptr&lt;GraphEdge&gt;<sp/>edge);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;GraphNode&gt;<sp/><ref refid="classTrafficGraph_1a58a9e792e9d07459b1e6fee1f08efb48" kindref="member">get_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;GraphNode&gt;&gt;<sp/><ref refid="classTrafficGraph_1a503a7eb165f5df6b3099b10e71774735" kindref="member">get_nodes</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;GraphEdge&gt;&gt;<sp/><ref refid="classTrafficGraph_1a9537afb96e766b4d910038a7b503af7f" kindref="member">get_edges</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classTrafficGraph_1afe15319ddc0ebf3f9f03c80709c66e74" kindref="member">get_node_count</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classTrafficGraph_1a8038d37fa4975dd955870c61143b5432" kindref="member">get_edge_count</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classTrafficGraph_1ae485051f1b4e6f8cbb91ad7d89dc89b1" kindref="member">is_empty</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTrafficGraph_1a7cbeed5458946820039e11f5d9665a37" kindref="member">aggregate_old_edges</ref>(std::chrono::seconds<sp/>age_threshold);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::shared_ptr&lt;GraphNode&gt;&gt;<sp/>nodes_;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;GraphEdge&gt;&gt;<sp/>edges_;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::mutex<sp/>graph_mutex_;<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>mutex<sp/>mutable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>recalculate_node_degrees();</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>TRAFFICGRAPH_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="includes/TrafficGraph.h"/>
  </compounddef>
</doxygen>
