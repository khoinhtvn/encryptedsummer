<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classGraphEdge" kind="class" language="C++" prot="public">
    <compoundname>GraphEdge</compoundname>
    <includes refid="GraphEdge_8h" local="no">GraphEdge.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classGraphEdge_1a15bf6a4cc4dae4f0368ef9112273ab80" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GraphEdge::source</definition>
        <argsstring></argsstring>
        <name>source</name>
        <qualifiedname>GraphEdge::source</qualifiedname>
        <briefdescription>
<para>Identifier of the source node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/GraphEdge.h" line="27" column="17" bodyfile="includes/GraphEdge.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGraphEdge_1a96de026803e8fceda55bf716e7416303" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GraphEdge::target</definition>
        <argsstring></argsstring>
        <name>target</name>
        <qualifiedname>GraphEdge::target</qualifiedname>
        <briefdescription>
<para>Identifier of the target node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/GraphEdge.h" line="31" column="17" bodyfile="includes/GraphEdge.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGraphEdge_1ad3ce59edfe79128ddd587bc3df2c3370" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GraphEdge::relationship</definition>
        <argsstring></argsstring>
        <name>relationship</name>
        <qualifiedname>GraphEdge::relationship</qualifiedname>
        <briefdescription>
<para>Type of relationship between the source and target nodes (e.g., &quot;connects_to&quot;, &quot;sends_data_to&quot;). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/GraphEdge.h" line="35" column="17" bodyfile="includes/GraphEdge.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGraphEdge_1a7a0dcb05bfdb31ed7735a746b13be8d6" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::string&gt; GraphEdge::attributes</definition>
        <argsstring></argsstring>
        <name>attributes</name>
        <qualifiedname>GraphEdge::attributes</qualifiedname>
        <briefdescription>
<para>Additional attributes associated with the edge. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/GraphEdge.h" line="39" column="24" bodyfile="includes/GraphEdge.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGraphEdge_1a6b6bacb716fb79e52b6b184f1c33b2cc" prot="public" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; GraphEdge::encoded_features</definition>
        <argsstring></argsstring>
        <name>encoded_features</name>
        <qualifiedname>GraphEdge::encoded_features</qualifiedname>
        <briefdescription>
<para>Encoded features, to feed to GAT. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/GraphEdge.h" line="43" column="17" bodyfile="includes/GraphEdge.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGraphEdge_1a9cb0c4a71deae507aa42d738bd5a3b7f" prot="public" static="no" mutable="no">
        <type>std::chrono::system_clock::time_point</type>
        <definition>std::chrono::system_clock::time_point GraphEdge::last_seen</definition>
        <argsstring></argsstring>
        <name>last_seen</name>
        <qualifiedname>GraphEdge::last_seen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/GraphEdge.h" line="45" column="43" bodyfile="includes/GraphEdge.h" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classGraphEdge_1a3cb272137fcf01bf7985e6ab17e71def" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GraphEdge::GraphEdge</definition>
        <argsstring>(const std::string &amp;src, const std::string &amp;tgt, const std::string &amp;rel)</argsstring>
        <name>GraphEdge</name>
        <qualifiedname>GraphEdge::GraphEdge</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tgt</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>rel</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classGraphEdge" kindref="compound">GraphEdge</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the source node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tgt</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the target node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rel</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of relationship between the nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/GraphEdge.h" line="52" column="5" bodyfile="includes/GraphEdge.h" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classGraphEdge_1a0bb6c037458bc73a448aa771621df019" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GraphEdge::to_dot_string</definition>
        <argsstring>() const</argsstring>
        <name>to_dot_string</name>
        <qualifiedname>GraphEdge::to_dot_string</qualifiedname>
        <briefdescription>
<para>Generates a DOT format string representation of the edge, including its attributes and encoded features. </para>
        </briefdescription>
        <detaileddescription>
<para>/** <simplesect kind="return"><para>A string in DOT format representing the edge. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/GraphEdge.h" line="71" column="17" bodyfile="GraphEdge.cpp" bodystart="11" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGraphEdge_1a66cb15ff27f3bed9df1809a614cb43f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GraphEdge::escape_dot_string</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>escape_dot_string</name>
        <qualifiedname>GraphEdge::escape_dot_string</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Escapes special characters in a string for DOT format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The input string to escape. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The escaped string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/GraphEdge.h" line="64" column="24" bodyfile="GraphEdge.cpp" bodystart="37" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents an edge in the network traffic graph, connecting two GraphNodes. </para>
    </briefdescription>
    <detaileddescription>
<para>Each <computeroutput><ref refid="classGraphEdge" kindref="compound">GraphEdge</ref></computeroutput> represents a communication or relationship between two network entities. It stores the identifiers of the source and target nodes, the type of relationship, and any additional attributes associated with the connection. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>GraphEdge</label>
        <link refid="classGraphEdge"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+relationship</edgelabel>
          <edgelabel>+source</edgelabel>
          <edgelabel>+target</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>+attributes</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>+encoded_features</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+last_seen</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>time_point</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="3">
        <label>unordered_map&lt; std::string, std::string &gt;</label>
      </node>
      <node id="4">
        <label>vector&lt; float &gt;</label>
      </node>
    </collaborationgraph>
    <location file="includes/GraphEdge.h" line="22" column="1" bodyfile="includes/GraphEdge.h" bodystart="22" bodyend="74"/>
    <listofallmembers>
      <member refid="classGraphEdge_1a7a0dcb05bfdb31ed7735a746b13be8d6" prot="public" virt="non-virtual"><scope>GraphEdge</scope><name>attributes</name></member>
      <member refid="classGraphEdge_1a6b6bacb716fb79e52b6b184f1c33b2cc" prot="public" virt="non-virtual"><scope>GraphEdge</scope><name>encoded_features</name></member>
      <member refid="classGraphEdge_1a66cb15ff27f3bed9df1809a614cb43f6" prot="public" virt="non-virtual"><scope>GraphEdge</scope><name>escape_dot_string</name></member>
      <member refid="classGraphEdge_1a3cb272137fcf01bf7985e6ab17e71def" prot="public" virt="non-virtual"><scope>GraphEdge</scope><name>GraphEdge</name></member>
      <member refid="classGraphEdge_1a9cb0c4a71deae507aa42d738bd5a3b7f" prot="public" virt="non-virtual"><scope>GraphEdge</scope><name>last_seen</name></member>
      <member refid="classGraphEdge_1ad3ce59edfe79128ddd587bc3df2c3370" prot="public" virt="non-virtual"><scope>GraphEdge</scope><name>relationship</name></member>
      <member refid="classGraphEdge_1a15bf6a4cc4dae4f0368ef9112273ab80" prot="public" virt="non-virtual"><scope>GraphEdge</scope><name>source</name></member>
      <member refid="classGraphEdge_1a96de026803e8fceda55bf716e7416303" prot="public" virt="non-virtual"><scope>GraphEdge</scope><name>target</name></member>
      <member refid="classGraphEdge_1a0bb6c037458bc73a448aa771621df019" prot="public" virt="non-virtual"><scope>GraphEdge</scope><name>to_dot_string</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
