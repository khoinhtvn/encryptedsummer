<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classTrafficGraph" kind="class" language="C++" prot="public">
    <compoundname>TrafficGraph</compoundname>
    <includes refid="TrafficGraph_8h" local="no">TrafficGraph.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTrafficGraph_1ad57e22e30b5e6ec71cecc9bd63045a20" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; <ref refid="classGraphNode" kindref="compound">GraphNode</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::shared_ptr&lt;GraphNode&gt; &gt; TrafficGraph::nodes_</definition>
        <argsstring></argsstring>
        <name>nodes_</name>
        <qualifiedname>TrafficGraph::nodes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="30" column="24" bodyfile="includes/TrafficGraph.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTrafficGraph_1a5f63c063c321fa61cb3d7dcfcbfff43e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classGraphEdge" kindref="compound">GraphEdge</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;GraphEdge&gt; &gt; TrafficGraph::edges_</definition>
        <argsstring></argsstring>
        <name>edges_</name>
        <qualifiedname>TrafficGraph::edges_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="31" column="17" bodyfile="includes/TrafficGraph.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTrafficGraph_1ab938e232437f667f0dcd01cfb9a30976" prot="private" static="no" mutable="yes">
        <type>std::mutex</type>
        <definition>std::mutex TrafficGraph::graph_mutex_</definition>
        <argsstring></argsstring>
        <name>graph_mutex_</name>
        <qualifiedname>TrafficGraph::graph_mutex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="32" column="24" bodyfile="includes/TrafficGraph.h" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classTrafficGraph_1aa52225cd200774fe315bfcf344635fc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TrafficGraph::TrafficGraph</definition>
        <argsstring>()</argsstring>
        <name>TrafficGraph</name>
        <qualifiedname>TrafficGraph::TrafficGraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="15" column="5" bodyfile="TrafficGraph.cpp" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1a0bbbfe4c14d9611db5060a1af21e3948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TrafficGraph::~TrafficGraph</definition>
        <argsstring>()</argsstring>
        <name>~TrafficGraph</name>
        <qualifiedname>TrafficGraph::~TrafficGraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="16" column="5" bodyfile="TrafficGraph.cpp" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1aaa78dc30cf3211a8b1ff008e6e821fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classGraphNode" kindref="compound">GraphNode</ref> &gt;</type>
        <definition>std::shared_ptr&lt; GraphNode &gt; TrafficGraph::get_or_create_node</definition>
        <argsstring>(const std::string &amp;id, const std::string &amp;type)</argsstring>
        <name>get_or_create_node</name>
        <qualifiedname>TrafficGraph::get_or_create_node</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="18" column="21" bodyfile="TrafficGraph.cpp" bodystart="11" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1a6103742580d1f6b65cad221f93dd5ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TrafficGraph::add_node</definition>
        <argsstring>(std::shared_ptr&lt; GraphNode &gt; node)</argsstring>
        <name>add_node</name>
        <qualifiedname>TrafficGraph::add_node</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classGraphNode" kindref="compound">GraphNode</ref> &gt;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="19" column="10" bodyfile="TrafficGraph.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1a10ccbf8d4890bf2a6f2673aa74a85641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TrafficGraph::add_edge</definition>
        <argsstring>(std::shared_ptr&lt; GraphEdge &gt; edge)</argsstring>
        <name>add_edge</name>
        <qualifiedname>TrafficGraph::add_edge</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classGraphEdge" kindref="compound">GraphEdge</ref> &gt;</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="20" column="10" bodyfile="TrafficGraph.cpp" bodystart="27" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1a58a9e792e9d07459b1e6fee1f08efb48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classGraphNode" kindref="compound">GraphNode</ref> &gt;</type>
        <definition>std::shared_ptr&lt; GraphNode &gt; TrafficGraph::get_node</definition>
        <argsstring>(const std::string &amp;id) const</argsstring>
        <name>get_node</name>
        <qualifiedname>TrafficGraph::get_node</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="21" column="21" bodyfile="TrafficGraph.cpp" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1a503a7eb165f5df6b3099b10e71774735" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classGraphNode" kindref="compound">GraphNode</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; GraphNode &gt; &gt; TrafficGraph::get_nodes</definition>
        <argsstring>() const</argsstring>
        <name>get_nodes</name>
        <qualifiedname>TrafficGraph::get_nodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="22" column="17" bodyfile="TrafficGraph.cpp" bodystart="50" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1a9537afb96e766b4d910038a7b503af7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classGraphEdge" kindref="compound">GraphEdge</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; GraphEdge &gt; &gt; TrafficGraph::get_edges</definition>
        <argsstring>() const</argsstring>
        <name>get_edges</name>
        <qualifiedname>TrafficGraph::get_edges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="23" column="17" bodyfile="TrafficGraph.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1afe15319ddc0ebf3f9f03c80709c66e74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t TrafficGraph::get_node_count</definition>
        <argsstring>() const</argsstring>
        <name>get_node_count</name>
        <qualifiedname>TrafficGraph::get_node_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="24" column="12" bodyfile="TrafficGraph.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1a8038d37fa4975dd955870c61143b5432" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t TrafficGraph::get_edge_count</definition>
        <argsstring>() const</argsstring>
        <name>get_edge_count</name>
        <qualifiedname>TrafficGraph::get_edge_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="25" column="12" bodyfile="TrafficGraph.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1ae485051f1b4e6f8cbb91ad7d89dc89b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TrafficGraph::is_empty</definition>
        <argsstring>() const</argsstring>
        <name>is_empty</name>
        <qualifiedname>TrafficGraph::is_empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="26" column="10" bodyfile="TrafficGraph.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classTrafficGraph_1a7cbeed5458946820039e11f5d9665a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TrafficGraph::aggregate_old_edges</definition>
        <argsstring>(std::chrono::seconds age_threshold)</argsstring>
        <name>aggregate_old_edges</name>
        <qualifiedname>TrafficGraph::aggregate_old_edges</qualifiedname>
        <param>
          <type>std::chrono::seconds</type>
          <declname>age_threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="27" column="10" bodyfile="TrafficGraph.cpp" bodystart="79" bodyend="115"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classTrafficGraph_1a0be5a3e071e02e41e57f8c19fa67246a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TrafficGraph::recalculate_node_degrees</definition>
        <argsstring>()</argsstring>
        <name>recalculate_node_degrees</name>
        <qualifiedname>TrafficGraph::recalculate_node_degrees</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/TrafficGraph.h" line="33" column="10" bodyfile="TrafficGraph.cpp" bodystart="117" bodyend="133"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>TrafficGraph</label>
        <link refid="classTrafficGraph"/>
      </node>
    </collaborationgraph>
    <location file="includes/TrafficGraph.h" line="13" column="1" bodyfile="includes/TrafficGraph.h" bodystart="13" bodyend="34"/>
    <listofallmembers>
      <member refid="classTrafficGraph_1a10ccbf8d4890bf2a6f2673aa74a85641" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>add_edge</name></member>
      <member refid="classTrafficGraph_1a6103742580d1f6b65cad221f93dd5ac0" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>add_node</name></member>
      <member refid="classTrafficGraph_1a7cbeed5458946820039e11f5d9665a37" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>aggregate_old_edges</name></member>
      <member refid="classTrafficGraph_1a5f63c063c321fa61cb3d7dcfcbfff43e" prot="private" virt="non-virtual"><scope>TrafficGraph</scope><name>edges_</name></member>
      <member refid="classTrafficGraph_1a8038d37fa4975dd955870c61143b5432" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>get_edge_count</name></member>
      <member refid="classTrafficGraph_1a9537afb96e766b4d910038a7b503af7f" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>get_edges</name></member>
      <member refid="classTrafficGraph_1a58a9e792e9d07459b1e6fee1f08efb48" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>get_node</name></member>
      <member refid="classTrafficGraph_1afe15319ddc0ebf3f9f03c80709c66e74" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>get_node_count</name></member>
      <member refid="classTrafficGraph_1a503a7eb165f5df6b3099b10e71774735" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>get_nodes</name></member>
      <member refid="classTrafficGraph_1aaa78dc30cf3211a8b1ff008e6e821fda" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>get_or_create_node</name></member>
      <member refid="classTrafficGraph_1ab938e232437f667f0dcd01cfb9a30976" prot="private" virt="non-virtual"><scope>TrafficGraph</scope><name>graph_mutex_</name></member>
      <member refid="classTrafficGraph_1ae485051f1b4e6f8cbb91ad7d89dc89b1" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>is_empty</name></member>
      <member refid="classTrafficGraph_1ad57e22e30b5e6ec71cecc9bd63045a20" prot="private" virt="non-virtual"><scope>TrafficGraph</scope><name>nodes_</name></member>
      <member refid="classTrafficGraph_1a0be5a3e071e02e41e57f8c19fa67246a" prot="private" virt="non-virtual"><scope>TrafficGraph</scope><name>recalculate_node_degrees</name></member>
      <member refid="classTrafficGraph_1aa52225cd200774fe315bfcf344635fc9" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>TrafficGraph</name></member>
      <member refid="classTrafficGraph_1a0bbbfe4c14d9611db5060a1af21e3948" prot="public" virt="non-virtual"><scope>TrafficGraph</scope><name>~TrafficGraph</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
